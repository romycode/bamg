### API is alive
GET http://localhost:8080/v1/health

> {%
client.test("API is alive", function () {
  client.assert(response.status === 200);
});
%}

### Delete a user
DELETE http://localhost:8080/v1/users/{{user_id}}
Content-Type: application/json

> {%
client.test("Delete a user", function() {
  client.assert(response.status === 200);
});
%}

### Create a user
POST http://localhost:8080/v1/users
Content-Type: application/json

{
  "id": "{{user_id}}",
  "name": "{{user_name}}",
  "email": "{{user_email}}"
}

> {%
client.test("Create a user", function() {
  client.assert(response.status === 201);
});
%}

### Get all users
GET http://localhost:8080/v1/users
Accept: application/json

> {%
client.test("Get all users", function() {
  client.assert(response.status === 200);
  client.assert(response.body[0].id === "e75344b2-114c-41ab-83f4-6fc3e652fc5f", "Invalid user_id");
});
%}

### Delete an account
DELETE http://localhost:8080/v1/accounts/{{account_id}}
Content-Type: application/json

> {%
client.test("Delete an account", function() {
  client.assert(response.status === 200, response.status + "");
});
%}

### Create a account
POST http://localhost:8080/v1/accounts
Content-Type: application/json

{
  "id": "{{account_id}}",
  "userId": "{{user_id}}",
  "credit": "0"
}

> {%
client.test("Create an accounts", function() {
  client.assert(response.status === 201);
  client.assert(response.body.id === "e75344b2-124c-41ab-83f4-6fc3e652fc5f", "Invalid account_id");
});
%}

### Get all accounts
GET http://localhost:8080/v1/accounts
Accept: application/json

> {%
client.test("Get all accounts", function() {
  client.assert(response.status === 200);
  client.assert(response.body[0].id === "e75344b2-124c-41ab-83f4-6fc3e652fc5f", "Invalid account_id");
});
%}

### Get all users with account
GET http://localhost:8080/v1/users
Accept: application/json

> {%
client.test("Get all users", function() {
  client.assert(response.status === 200);
  client.assert(response.body[0].id === "e75344b2-114c-41ab-83f4-6fc3e652fc5f", "Invalid user_id");
  client.assert(response.body[0].accounts[0].id === "e75344b2-124c-41ab-83f4-6fc3e652fc5f", "Invalid account_id");
});
%}